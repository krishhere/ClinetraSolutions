<!DOCTYPE html>
<html lang="en">
<head>
    <title>Clinetra - Admin</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        window.onload = function () {
            window.history.forward();
            setTimeout('window.history.forward();', 500);
        };
    </script>
</head>
<body class="dark">
    <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="@Url.Action("Index", "AdminMain")">Clinetra Admin </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mynavbar">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="mynavbar">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item"><a class="nav-link" href="@Url.Action("Index", "AdminMain")" style="padding-right:0px;">Home |</a></li>
                    <li class="nav-item"><a class="nav-link" href="@Url.Action("EnquiryDashboard", "AdminMain")" style="padding-right:0px;">Users' Enquiry |</a></li>
                    <li class="nav-item"><a class="nav-link" href="@Url.Action("Students", "AdminMain")" style="padding-right:0px;">Students |</a></li>
                    <li class="nav-item"><a class="nav-link" href="@Url.Action("NewBatch", "AdminMain")" style="padding-right:0px;">New Batch |</a></li>
                </ul>
                <form class="d-flex">
                    <button class="btn btn-outline-danger" onclick="location.href='/AdminMain/Logout'" type="button">
                        <span class="material-icons">
                            logout
                        </span>
                    </button>
                </form>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        @RenderBody()
    </div>
</body>
</html>
<script>
    function format(button, command) {
        event.preventDefault();
        const container = button.closest('.editor-container');
        const editor = container.querySelector('.editor');
        editor.focus();
        document.execCommand(command, false, null);
        updateOutput(container);
    }

    function formatBlock(button, className) {
        const container = button.closest('.editor-container');
        const editor = container.querySelector('.editor');
        editor.focus();

        const selection = window.getSelection();
        if (!selection.rangeCount) return;

        const range = selection.getRangeAt(0);
        const span = document.createElement('span');
        span.className = className;
        range.surroundContents(span);

        selection.removeAllRanges();
        selection.addRange(range);

        updateOutput(container);
    }

    function updateOutput(container) {
        event.preventDefault();
        const editor = container.querySelector('.editor');
        const output = container.querySelector('pre');
        output.textContent = editor.innerHTML;
    }
    function setColor(input, command) {
        const container = input.closest('.editor-container');
        const editor = container.querySelector('.editor');
        editor.focus();
        document.execCommand(command, false, input.value);
        updateOutput(container);
    }

    document.querySelectorAll('.editor-container .editor').forEach(editor => {
        editor.addEventListener('input', () => {
            const container = editor.closest('.editor-container');
            updateOutput(container);
        });
    });
    let currentEditor = null;
    let savedRange = null;

    function openLinkPopup(button) {
        event.preventDefault();
        const container = button.closest('.editor-container');
        currentEditor = container.querySelector('.editor');

        const selection = window.getSelection();
        if (selection.rangeCount > 0) {
            savedRange = selection.getRangeAt(0);
        }

        const popup = container.querySelector('.link-popup');
        popup.style.display = 'block';
        const rect = button.getBoundingClientRect();
        popup.style.top = (rect.bottom + window.scrollY + 5) + 'px';
        popup.style.left = (rect.left + window.scrollX) + 'px';

        popup.querySelector('#link-url').value = '';
        popup.querySelector('#link-text').value = '';
    }

    function closeLinkPopup() {
        const popup = document.querySelector('.link-popup');
        popup.style.display = 'none';
    }

    function insertLink() {
        const url = document.getElementById('link-url').value.trim();
        const text = document.getElementById('link-text').value.trim();

        if (url === '' || text === '') {
            alert('Please fill both fields');
            return;
        }

        closeLinkPopup();
        if (savedRange) {
            const a = document.createElement('a');
            a.href = url;
            a.textContent = text;
            a.target = '_blank';
            const span = document.createElement('span');
            span.appendChild(a);
            savedRange.deleteContents();
            savedRange.insertNode(span);
            const range = document.createRange();
            range.setStartAfter(span);
            range.collapse(true);
            const selection = window.getSelection();
            selection.removeAllRanges();
            selection.addRange(range);
            savedRange = null;
            updateOutput(currentEditor.closest('.editor-container'));
        }
    }
</script>